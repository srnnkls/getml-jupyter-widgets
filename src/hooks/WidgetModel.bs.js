// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";

var context = React.createContext(undefined);

var make = context.Provider;

var Provider = {
  make: make
};

var Context = {
  context: context,
  Provider: Provider
};

function use(param) {
  return React.useContext(context);
}

function useEvent($$event, callback, deps, param) {
  var model = React.useContext(context);
  var dependencies = deps !== undefined ? [
      model,
      deps
    ] : [
      model,
      undefined
    ];
  React.useEffect((function (param) {
          var callbackWrapper = function (param) {
            Curry._1(callback, model);
          };
          model.on($$event, callbackWrapper);
          return (function (param) {
                    model.unbind($$event, callbackWrapper);
                  });
        }), dependencies);
}

function useComm(param) {
  var model = React.useContext(context);
  return function (message) {
    model.send(JSON.parse(message));
  };
}

function useState(name) {
  var model = React.useContext(context);
  var match = React.useState(function (param) {
        return model.get(name);
      });
  var setState = match[1];
  var callback = function (model) {
    Curry._1(setState, (function (param) {
            return model.get(name);
          }));
  };
  useEvent("change:" + name, callback, [name], undefined);
  var updateModel = function (val, options) {
    model.set(name, val, options);
    model.save_changes();
  };
  return [
          match[0],
          updateModel
        ];
}

export {
  Context ,
  use ,
  useEvent ,
  useComm ,
  useState ,
}
/* context Not a pure module */
