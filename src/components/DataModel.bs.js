// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Tree from "./Tree.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as WidgetModel from "../hooks/WidgetModel.bs.js";
import * as ModelContext from "./ModelContext.bs.js";
import * as JsxRuntime from "react/jsx-runtime";

function DataModel$WidgetPane(props) {
  var match = WidgetModel.useState("tree");
  var children = match[0].children;
  if (children !== undefined) {
    children.map(function (child) {
          return child.name;
        });
  }
  return JsxRuntime.jsx(JsxRuntime.Fragment, {
              children: Caml_option.some(JsxRuntime.jsx(Tree.Example.make, {
                        width: 700,
                        height: 700
                      }))
            });
}

var WidgetPane = {
  make: DataModel$WidgetPane
};

function DataModel$default(props) {
  return JsxRuntime.jsx(ModelContext.make, {
              model: props.model,
              children: JsxRuntime.jsx(DataModel$WidgetPane, {})
            });
}

var $$default = DataModel$default;

export {
  WidgetPane ,
  $$default ,
  $$default as default,
}
/* Tree Not a pure module */
